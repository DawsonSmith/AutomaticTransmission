// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "CANTalon.h"


#include "DriveSystem.h"
#include "../RobotMap.h"
#include "../Commands/Move.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

DriveSystem::DriveSystem() : Subsystem("DriveSystem") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
     TalonFrontLeft = RobotMap::driveSystemTalonFrontLeft;
    talonFrontRight = RobotMap::driveSystemTalonFrontRight;
    talonBackLeft = RobotMap::driveSystemTalonBackLeft;
    talonBackRight = RobotMap::driveSystemTalonBackRight;
    robotDrive41 = RobotMap::driveSystemRobotDrive41;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void DriveSystem::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        SetDefaultCommand(new Move());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void DriveSystem::DriveTalons(){
	//poweris the distance joystick is pushed
	double power= Robot::oi->getJoystick1()->GetX();
	RobotMap::driveSystemTalonFrontRight->Set(power);
	RobotMap::driveSystemTalonBackRight->Set(power);
}

// Put methods for controlling this subsystem
// here. Call these from Commands.

